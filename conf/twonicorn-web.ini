#  Copyright 2015 CityGrid Media, LLC
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/environment.html
###

[app:main]
use = egg:TwonicornWeb

# CHANGEME - set to false for production server
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm
    pyramid_debugtoolbar # CHANGEME Comment out the toolbar for production server

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

# Twonicorn Settings
###################################
# CHANGEME - file with secret info. Should not be world reable but 
# must be readable by apache.
tcw.secrets_file = /path/to/secrets/twonicorn-secrets.ini

# Set to local to use local users/groups
tcw.auth_mode = ldap
# CHANGEME - You Active Directory server
tcw.ldap_server = ldaps://ldap.mycompany.com 
# CHANGEME - If needed for you environment
tcw.ldap_port = 3269
# CHANGEME - path to your AD server's certificate
tcw.ldap_cert = /etc/pki/CA/certs/ldap-server.crt
# CHANGEME - The bind username for your AD server
tcw.ldap_bind = my_bind_username
# CHANGEME - Your AD login base DN
tcw.login_base_dn = OU=Login,OU=Group,DC=mycompany,DC=com
# CHANGEME - Your AD group search base DN
tcw.group_base_dn = DC=Groups,DC=mycompany,DC=com

# CHANGEME - Path to a file that makes the app return
# a HTTP 200 on the /healthcheck endpoint if it exists, 
# and HTTPServiceUnavailable if it does not exist. Useful 
# for putting behind a loadbalancer.
tcw.healthcheck_file = /path/to/inrotation.txt
tcw.api_user = api_user

# Read with SafeConfigParser
[app:safe]
tcw.login_filter = (&(objectClass=user)(sAMAccountName=%%(login)s))
tcw.group_filter = (&(objectCategory=group)(member=%%(userdn)s))

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8180

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/logging.html
###

[loggers]
keys = root, twonicornweb, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_twonicornweb]
level = INFO
handlers =
qualname = twonicornweb

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

